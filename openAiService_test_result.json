{"numFailedTestSuites":1,"numFailedTests":0,"numPassedTestSuites":0,"numPassedTests":0,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":1,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":0,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1706273998132,"success":false,"testResults":[{"assertionResults":[],"coverage":{},"endTime":1706273999099,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/en/ecmascript-modules for how to enable it.\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/en/configuration.html\n\n    Details:\n\n    C:\\Users\\spesna_5\\Desktop\\gpt\\gpt-pilot\\workspace\\Prompt_engineering\\node_modules\\axios\\index.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,global,jest){import axios from './lib/axios.js';\n                                                                                             ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n    > 1 | const axios = require('axios');\n        |                                ^\n      2 | const MockAdapter = require('axios-mock-adapter');\n      3 | const { callOpenAiApi } = require('../openAiService');\n      4 | const { Server } = require('socket.io');\n\n      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1350:14)\n      at Object.<anonymous> (tests/openAiService.test.js:1:104)\n","name":"C:\\Users\\spesna_5\\Desktop\\gpt\\gpt-pilot\\workspace\\Prompt_engineering\\tests\\openAiService.test.js","startTime":1706273999099,"status":"failed","summary":""}],"wasInterrupted":false}